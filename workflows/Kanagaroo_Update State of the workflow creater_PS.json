{"createdAt":"2025-10-08T08:49:53.535Z","updatedAt":"2025-10-08T13:42:30.000Z","id":"W4BhDeYpRsEhMCbF","name":"Kanagaroo_Update State of the workflow creater_PS","active":false,"isArchived":false,"nodes":[{"parameters":{"workflowInputs":{"values":[{"name":"id"},{"name":"name"},{"name":"fieldName"},{"name":"sessionId"}]}},"id":"c055762a-8fe7-4141-a639-df2372f30060","typeVersion":1.1,"name":"When Executed by Another Workflow","type":"n8n-nodes-base.executeWorkflowTrigger","position":[-1024,528]},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $('When Executed by Another Workflow').item.json.fieldName }}","rightValue":"category","operator":{"type":"string","operation":"equals"},"id":"1fd859ba-e269-494f-a9a0-f080593b4135"}],"combinator":"and"},"renameOutput":true,"outputKey":"Trigger Category"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"6cea796c-0478-4e91-b0ea-ff741f268874","leftValue":"={{ $('When Executed by Another Workflow').item.json.fieldName }}","rightValue":"type","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"Trigger Type"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"17bde155-8052-4d95-8d15-164eb4d8130b","leftValue":"={{ $('When Executed by Another Workflow').item.json.fieldName }}","rightValue":"folder","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"Folder"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"93f5bb60-7206-4abe-9ac6-9659d46441ab","leftValue":"={{ $('When Executed by Another Workflow').item.json.fieldName }}","rightValue":"name","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"Workflow Name"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"8ae3e3c7-35e1-4048-9f09-3bf3a787edf9","leftValue":"={{ $('When Executed by Another Workflow').item.json.fieldName }}","rightValue":"condition","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"Condition"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"dae0e9e4-16c5-49de-bbea-f5cd99b29d7e","leftValue":"={{ $('When Executed by Another Workflow').item.json.fieldName }}","rightValue":"include_tags","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"Include tags"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"791adeec-055e-4cb3-b5bd-86657b37a0f8","leftValue":"={{ $('When Executed by Another Workflow').item.json.fieldName }}","rightValue":"include_tags","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"Exclude Tags"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[-608,480],"id":"9e635952-0fab-4b8c-b37f-a17c2b69c672","name":"Switch"},{"parameters":{"operation":"select","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"kangaroo_states","mode":"list","cachedResultName":"kangaroo_states"},"where":{"values":[{"column":"session_id","value":"={{ $json.sessionId }}"}]},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-832,528],"id":"1f6f704e-383c-463c-8bae-dde6fa7ac7b0","name":"Get State","alwaysOutputData":true,"credentials":{"postgres":{"id":"P8ta1vGMGbrIOFm2","name":"Postgres:N8NDataExtractionDB"}}},{"parameters":{"jsCode":"const state = $('Get State').first().json.state;\nstate.type.id = $('When Executed by Another Workflow').first().json.id;\nstate.type.name = $('When Executed by Another Workflow').first().json.name;\nreturn state;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-32,448],"id":"071d1780-71eb-4583-b0e0-b4641d67295f","name":"Triggert Type"},{"parameters":{"jsCode":"const state = $('Get State').first().json.state;\nstate.category.id = $('When Executed by Another Workflow').first().json.id;\nstate.category.name = $('When Executed by Another Workflow').first().json.name;\nreturn state;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-48,144],"id":"f759594a-a7f2-4d6a-827d-6c7bf2d485b1","name":"Trigger Category"},{"parameters":{"operation":"update","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"kangaroo_states","mode":"list","cachedResultName":"kangaroo_states"},"columns":{"mappingMode":"defineBelow","value":{"session_id":"={{ $('When Executed by Another Workflow').item.json.sessionId }}","state":"={{ $('Trigger Category').item.json }}"},"matchingColumns":["session_id"],"schema":[{"id":"session_id","displayName":"session_id","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"state","displayName":"state","required":false,"defaultMatch":false,"display":true,"type":"object","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[128,144],"id":"c998b470-677d-402a-8e5d-e6181fcc3e26","name":"Update Category","credentials":{"postgres":{"id":"P8ta1vGMGbrIOFm2","name":"Postgres:N8NDataExtractionDB"}}},{"parameters":{"operation":"update","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"kangaroo_states","mode":"list","cachedResultName":"kangaroo_states"},"columns":{"mappingMode":"defineBelow","value":{"session_id":"={{ $('When Executed by Another Workflow').item.json.sessionId }}","state":"={{ $('Triggert Type').item.json }}"},"matchingColumns":["session_id"],"schema":[{"id":"session_id","displayName":"session_id","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"state","displayName":"state","required":false,"defaultMatch":false,"display":true,"type":"object","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[144,448],"id":"1fe66365-38a3-4414-b1c3-e6a067c35d17","name":"Update Type","credentials":{"postgres":{"id":"P8ta1vGMGbrIOFm2","name":"Postgres:N8NDataExtractionDB"}}},{"parameters":{"jsCode":"const state = $('Get State').first().json.state;\nstate.folder.id = $('When Executed by Another Workflow').first().json.id;\nstate.folder.name = $('When Executed by Another Workflow').first().json.name;\nreturn state;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-32,592],"id":"359e1a0f-3661-4ad2-bed6-9bfcc9b4b7d0","name":"Folder"},{"parameters":{"operation":"update","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"kangaroo_states","mode":"list","cachedResultName":"kangaroo_states"},"columns":{"mappingMode":"defineBelow","value":{"session_id":"={{ $('When Executed by Another Workflow').item.json.sessionId }}","state":"={{ $('Folder').item.json }}"},"matchingColumns":["session_id"],"schema":[{"id":"session_id","displayName":"session_id","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"state","displayName":"state","required":false,"defaultMatch":false,"display":true,"type":"object","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[144,592],"id":"7e4e1e07-d9ab-47d5-be9e-ef68779fd750","name":"Update Folder","credentials":{"postgres":{"id":"P8ta1vGMGbrIOFm2","name":"Postgres:N8NDataExtractionDB"}}},{"parameters":{"jsCode":"const state = $('Get State').first().json.state;\nstate.name.name = $('When Executed by Another Workflow').first().json.name;\nreturn state;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-32,736],"id":"d9465fd5-b3ac-4f2d-a08c-578d5dbc98dc","name":"Workflow Name"},{"parameters":{"operation":"update","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"kangaroo_states","mode":"list","cachedResultName":"kangaroo_states"},"columns":{"mappingMode":"defineBelow","value":{"session_id":"={{ $('When Executed by Another Workflow').item.json.sessionId }}","state":"={{ $('Workflow Name').item.json }}"},"matchingColumns":["session_id"],"schema":[{"id":"session_id","displayName":"session_id","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"state","displayName":"state","required":false,"defaultMatch":false,"display":true,"type":"object","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[144,736],"id":"70d926b5-7dec-4ce5-ae48-f7c0d59029dc","name":"Update Name","credentials":{"postgres":{"id":"P8ta1vGMGbrIOFm2","name":"Postgres:N8NDataExtractionDB"}}},{"parameters":{"operation":"update","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"kangaroo_states","mode":"list","cachedResultName":"kangaroo_states"},"columns":{"mappingMode":"defineBelow","value":{"session_id":"={{ $('When Executed by Another Workflow').item.json.sessionId }}","state":"={{ $('Get Complete Form after Type').item.json.new_state }}"},"matchingColumns":["session_id"],"schema":[{"id":"session_id","displayName":"session_id","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"state","displayName":"state","required":false,"defaultMatch":false,"display":true,"type":"object","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[784,352],"id":"c0063046-6cc9-4de5-a409-71c8b8c30a95","name":"Extend Dynamic Form after Type","credentials":{"postgres":{"id":"P8ta1vGMGbrIOFm2","name":"Postgres:N8NDataExtractionDB"}}},{"parameters":{"jsCode":"const formMapping = {\n  \"insured\": {\n    \"advanced_pipeline_filters_quoted\": {\n      \"condition\": {\n        \"is_required\": true,\n        \"label\": \"Condition\",\n        \"selected_options\": [],\n        \"field_type\": \"multiple_selection_dropdown\",\n        \"sort_order\": 6      \n      },\n      \"include_tags\": {\n        \"is_required\": false,\n        \"label\": \"Include Tags\",\n        \"selected_options\": [],\n        \"field_type\": \"multiple_selection_dropdown\",\n        \"sort_order\": 7   \n      },\n      \"exclude_tags\": {\n        \"is_required\": false,\n        \"label\": \"Exclude Tags\",\n        \"selected_options\": [],\n        \"field_type\": \"multiple_selection_dropdown\",\n        \"sort_order\": 8  \n      }\n    }\n  }\n};\n\nconst existing = $input.first().json.state;\n\n// Helper cleaner function\nconst clean = str => str\n  .toLowerCase()\n  .replace(/[\\s\\-]+/g, \"_\")     // replace spaces & hyphens with underscores\n  .replace(/[^a-z0-9_]/g, \"\")   // remove all non-alphanumeric (except underscore)\n  .replace(/_+/g, \"_\")          // collapse multiple underscores\n  .trim();                      // remove leading/trailing spaces\n\n// Extract and clean\nlet category = clean(existing.category.name);\nlet type = clean(existing.type.name);\n\n// Find mapping\nlet mapping = (formMapping[category] && formMapping[category][type]) \n  ? formMapping[category][type] \n  : {};\n\n// Merge mapping into existing state\nlet new_state = {\n  ...existing,\n  ...mapping\n};\n\nreturn [{\n  json: {\n    category,\n    type,\n    mapping,\n    new_state\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[576,352],"id":"9a77c0fc-d4ce-4079-bad1-28f422656a9e","name":"Get Complete Form after Type"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"baed83f6-da1f-4adc-9949-cba9cce7569e","leftValue":"={{ $json.state.category.id }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}},{"id":"787684d4-8790-4f23-a377-50af0243c46f","leftValue":"={{ $json.state.type.id }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[304,144],"id":"b354b708-e2e5-487e-b8d6-e914b16cca4b","name":"Category and Type filled after Category?"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"baed83f6-da1f-4adc-9949-cba9cce7569e","leftValue":"={{ $json.state.category.id }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}},{"id":"787684d4-8790-4f23-a377-50af0243c46f","leftValue":"={{ $json.state.type.id }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[352,448],"id":"7f2b57c8-bd93-44c7-8037-16340017e217","name":"Category and Type filled after Type?"},{"parameters":{"jsCode":"const formMapping = {\n  \"insured\": {\n    \"advanced_pipeline_filters_quoted\": {\n      \"condition\": {\n        \"is_required\": true,\n        \"label\": \"Condition\",\n        \"selected_options\": [],\n        \"field_type\": \"multiple_selection_dropdown\",\n        \"sort_order\": 6      \n      },\n      \"include_tags\": {\n        \"is_required\": false,\n        \"label\": \"Include Tags\",\n        \"selected_options\": [],\n        \"field_type\": \"multiple_selection_dropdown\",\n        \"sort_order\": 7   \n      },\n      \"exclude_tags\": {\n        \"is_required\": false,\n        \"label\": \"Exclude Tags\",\n        \"selected_options\": [],\n        \"field_type\": \"multiple_selection_dropdown\",\n        \"sort_order\": 8  \n      }\n    }\n  }\n};\n\nconst existing = $input.first().json.state;\n\n// Helper cleaner function\nconst clean = str => str\n  .toLowerCase()\n  .replace(/[\\s\\-]+/g, \"_\")     // replace spaces & hyphens with underscores\n  .replace(/[^a-z0-9_]/g, \"\")   // remove all non-alphanumeric (except underscore)\n  .replace(/_+/g, \"_\")          // collapse multiple underscores\n  .trim();                      // remove leading/trailing spaces\n\n// Extract and clean\nlet category = clean(existing.category.name);\nlet type = clean(existing.type.name);\n\n// Find mapping\nlet mapping = (formMapping[category] && formMapping[category][type]) \n  ? formMapping[category][type] \n  : {};\n\n// Merge mapping into existing state\nlet new_state = {\n  ...existing,\n  ...mapping\n};\n\nreturn [{\n  json: {\n    category,\n    type,\n    mapping,\n    new_state\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[576,64],"id":"36afa298-c32e-44ac-8551-6491416059a2","name":"Get Complete Form after Category"},{"parameters":{"operation":"update","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"kangaroo_states","mode":"list","cachedResultName":"kangaroo_states"},"columns":{"mappingMode":"defineBelow","value":{"session_id":"={{ $('When Executed by Another Workflow').item.json.sessionId }}","state":"={{ $('Get Complete Form after Category').item.json.new_state }}"},"matchingColumns":["session_id"],"schema":[{"id":"session_id","displayName":"session_id","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"state","displayName":"state","required":false,"defaultMatch":false,"display":true,"type":"object","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[784,64],"id":"1cba580b-e503-477d-a191-0c90e86f29e2","name":"Extend Dynamic Form after Category","credentials":{"postgres":{"id":"P8ta1vGMGbrIOFm2","name":"Postgres:N8NDataExtractionDB"}}},{"parameters":{"jsCode":"// Get the JSON from the node\nconst data = $('When Executed by Another Workflow').first().json;\n\n// Split IDs and names by comma\nconst ids = data.id.split(',');\nconst names = data.name.split(',');\n\n// Build array of objects\nconst result = ids.map((id, index) => ({\n    id: id.trim(),\n    name: names[index] ? names[index].trim() : null\n  }\n));\n\nreturn result;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-32,896],"id":"76607800-885b-4936-8354-220cf1532392","name":"Category Data Preparation"},{"parameters":{"jsCode":"const state = $('Get State').first().json.state;\n\n// Extract pure JSON from all items of \"Category Data Preparation\"\nconst selectedOptions = $(\"Category Data Preparation\")\n  .all()\n  .map(item => item.json);\n\n// Assign cleaned list\nstate.condition.selected_options = selectedOptions;\n\nreturn state;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[144,896],"id":"24a4e9fa-8dff-490d-b949-25c2d9af4a78","name":"Workflow Condition"},{"parameters":{"operation":"update","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"kangaroo_states","mode":"list","cachedResultName":"kangaroo_states"},"columns":{"mappingMode":"defineBelow","value":{"session_id":"={{ $('Get State').first().json.session_id }}","state":"={{ $('Workflow Condition').item.json }}"},"matchingColumns":["session_id"],"schema":[{"id":"session_id","displayName":"session_id","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"state","displayName":"state","required":false,"defaultMatch":false,"display":true,"type":"object","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[368,896],"id":"a639c6bb-7055-4450-8eac-920414925fe9","name":"Update Conditions","credentials":{"postgres":{"id":"P8ta1vGMGbrIOFm2","name":"Postgres:N8NDataExtractionDB"}}},{"parameters":{"jsCode":"// Get the JSON from the node\nconst data = $('When Executed by Another Workflow').first().json;\n\n// Split IDs and names by comma\nconst ids = data.id.split(',');\nconst names = data.name.split(',');\n\n// Build array of objects\nconst result = ids.map((id, index) => ({\n    id: id.trim(),\n    name: names[index] ? names[index].trim() : null\n  }\n));\n\nreturn result;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-32,1072],"id":"71111b14-72db-4656-9fd0-0eb7641a268a","name":"Include Tags Data Preparation"},{"parameters":{"jsCode":"const state = $('Get State').first().json.state;\n\n// Extract pure JSON from all items of \"Category Data Preparation\"\nconst selectedOptions = $(\"Include Tags Data Preparation\")\n  .all()\n  .map(item => item.json);\n\n// Assign cleaned list\nstate.include_tags.selected_options = selectedOptions;\n\nreturn state;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[144,1072],"id":"022ce52c-40c4-46e1-b8c5-0c8054bc97c6","name":"Workflow Include Tags"},{"parameters":{"operation":"update","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"kangaroo_states","mode":"list","cachedResultName":"kangaroo_states"},"columns":{"mappingMode":"defineBelow","value":{"session_id":"={{ $('Get State').first().json.session_id }}","state":"={{ $('Workflow Include Tags').item.json }}"},"matchingColumns":["session_id"],"schema":[{"id":"session_id","displayName":"session_id","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"state","displayName":"state","required":false,"defaultMatch":false,"display":true,"type":"object","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[368,1072],"id":"77c0bb05-e4f6-4b93-b8ab-9072d3820bb6","name":"Update Include Tags","credentials":{"postgres":{"id":"P8ta1vGMGbrIOFm2","name":"Postgres:N8NDataExtractionDB"}}},{"parameters":{"jsCode":"// Get the JSON from the node\nconst data = $('When Executed by Another Workflow').first().json;\n\n// Split IDs and names by comma\nconst ids = data.id.split(',');\nconst names = data.name.split(',');\n\n// Build array of objects\nconst result = ids.map((id, index) => ({\n    id: id.trim(),\n    name: names[index] ? names[index].trim() : null\n  }\n));\n\nreturn result;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-32,1248],"id":"1a617217-5200-409b-b3c4-df59875b8442","name":"Exclude Tags Data Preparation"},{"parameters":{"jsCode":"const state = $('Get State').first().json.state;\n\n// Extract pure JSON from all items of \"Category Data Preparation\"\nconst selectedOptions = $(\"Exclude Tags Data Preparation\")\n  .all()\n  .map(item => item.json);\n\n// Assign cleaned list\nstate.exclude_tags.selected_options = selectedOptions;\n\nreturn state;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[144,1248],"id":"8bd5a579-6e0a-4160-bce8-abe4cda21e49","name":"Workflow Exclude Tags"},{"parameters":{"operation":"update","schema":{"__rl":true,"mode":"list","value":"public"},"table":{"__rl":true,"value":"kangaroo_states","mode":"list","cachedResultName":"kangaroo_states"},"columns":{"mappingMode":"defineBelow","value":{"session_id":"={{ $('Get State').first().json.session_id }}","state":"={{ $('Workflow Exclude Tags').item.json }}"},"matchingColumns":["session_id"],"schema":[{"id":"session_id","displayName":"session_id","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"state","displayName":"state","required":false,"defaultMatch":false,"display":true,"type":"object","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[368,1248],"id":"3488dcdf-5aff-4e5d-8069-246ed3c19676","name":"Update Exclude Tags","credentials":{"postgres":{"id":"P8ta1vGMGbrIOFm2","name":"Postgres:N8NDataExtractionDB"}}}],"connections":{"When Executed by Another Workflow":{"main":[[{"node":"Get State","type":"main","index":0}]]},"Get State":{"main":[[{"node":"Switch","type":"main","index":0}]]},"Switch":{"main":[[{"node":"Trigger Category","type":"main","index":0}],[{"node":"Triggert Type","type":"main","index":0}],[{"node":"Folder","type":"main","index":0}],[{"node":"Workflow Name","type":"main","index":0}],[{"node":"Category Data Preparation","type":"main","index":0}],[{"node":"Include Tags Data Preparation","type":"main","index":0}],[]]},"Triggert Type":{"main":[[{"node":"Update Type","type":"main","index":0}]]},"Trigger Category":{"main":[[{"node":"Update Category","type":"main","index":0}]]},"Folder":{"main":[[{"node":"Update Folder","type":"main","index":0}]]},"Workflow Name":{"main":[[{"node":"Update Name","type":"main","index":0}]]},"Update Type":{"main":[[{"node":"Category and Type filled after Type?","type":"main","index":0}]]},"Get Complete Form after Type":{"main":[[{"node":"Extend Dynamic Form after Type","type":"main","index":0}]]},"Update Category":{"main":[[{"node":"Category and Type filled after Category?","type":"main","index":0}]]},"Category and Type filled after Category?":{"main":[[{"node":"Get Complete Form after Category","type":"main","index":0}]]},"Category and Type filled after Type?":{"main":[[{"node":"Get Complete Form after Type","type":"main","index":0}]]},"Get Complete Form after Category":{"main":[[{"node":"Extend Dynamic Form after Category","type":"main","index":0}]]},"Category Data Preparation":{"main":[[{"node":"Workflow Condition","type":"main","index":0}]]},"Workflow Condition":{"main":[[{"node":"Update Conditions","type":"main","index":0}]]},"Include Tags Data Preparation":{"main":[[{"node":"Workflow Include Tags","type":"main","index":0}]]},"Workflow Include Tags":{"main":[[{"node":"Update Include Tags","type":"main","index":0}]]},"Exclude Tags Data Preparation":{"main":[[{"node":"Workflow Exclude Tags","type":"main","index":0}]]},"Workflow Exclude Tags":{"main":[[{"node":"Update Exclude Tags","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"When Executed by Another Workflow":[{"json":{"id":"882BAF7F-15C0-452E-B18C-CE29DD3EF537","name":"Insured","fieldName":"category","sessionId":"1e279553-a5ab-4295-828a-0f2860c7de62"}}]},"versionId":"28d7ea32-445e-46fa-bacb-374b6fea1935","triggerCount":0,"shared":[{"createdAt":"2025-10-08T08:49:53.539Z","updatedAt":"2025-10-08T08:49:53.539Z","role":"workflow:owner","workflowId":"W4BhDeYpRsEhMCbF","projectId":"jYp8xiWttkK2cWvC"}],"tags":[]}