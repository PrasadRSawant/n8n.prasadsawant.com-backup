{"createdAt":"2025-09-26T06:43:30.716Z","updatedAt":"2025-09-30T06:28:30.000Z","id":"GSrNDYr79P5WKTX1","name":"Expense Assistant","active":false,"isArchived":false,"nodes":[{"parameters":{"options":{"allowFileUploads":true,"allowedFilesMimeTypes":"image"}},"type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.3,"position":[-464,-16],"id":"6e709cad-0ad8-4381-a068-6b9c8ef0b068","name":"When chat message received","webhookId":"e704b209-9a17-453e-810b-b57ee941bd48"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"77faf6cd-0487-4e0d-a6d7-20d598e9283f","leftValue":"={{ $json.files }}","rightValue":"","operator":{"type":"array","operation":"notEmpty","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-256,-16],"id":"16fb4b2b-e8c6-4205-8c43-2548a5ef95e9","name":"If has Attachment"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[16,128],"id":"ac4b20e6-9ef0-4c24-939b-927acb9be745","name":"AI Agent"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[-64,368],"id":"e3b0a419-c6dd-4dae-b0e0-0f0b8640243c","name":"Google Gemini Chat Model","credentials":{"googlePalmApi":{"id":"ZKmR3WzEybcGTCae","name":"Tensora"}}},{"parameters":{"tableName":"n8n_expense_tracker"},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[80,368],"id":"b5fa4b95-ac28-4054-b7fc-2cf48e96779b","name":"Postgres Chat Memory","credentials":{"postgres":{"id":"P8ta1vGMGbrIOFm2","name":"Postgres:N8NDataExtractionDB"}}},{"parameters":{"resource":"document","modelId":{"__rl":true,"value":"models/gemini-2.5-flash","mode":"list","cachedResultName":"models/gemini-2.5-flash"},"text":"=You are an Expense Extraction Assistant.  \nYour role is to extract structured expense data from uploaded attachments (such as payment app screenshots or bills) or from manual text instructions provided by the user.  \n\nAlways output the extracted details in a structured JSON format with the following fields:\n\n1. transaction_date → The date and time when the transaction happened.  \n2. amount → The numeric value of the expense with two decimal places.  \n3. payment_method → The payment mode used (e.g., GPay, UPI, Cash, Card, PhonePe).  \n4. category → The type of expense (e.g., Food, Rent, Travel, Shopping, Groceries, Bills).  \n5. merchant → The name of the vendor, shop, or recipient of the transaction.  \n6. notes → Any additional information, including the raw OCR text if extracted from an image.  \n7. source → Either \"image_ocr\" (if extracted from an image) or \"manual\" (if entered by user instruction).  \n8. created_at → Current timestamp of when the record was extracted.\n\nIf a value is not available, return it as null but always include the key.  \nDo not invent amounts or merchants unless they are explicitly present in the input.  \ne.g\n{\n  \"is_valid_attchment\":true,\n  \"transaction_date\": \"2025-09-30T10:15:00\",\n  \"amount\": 250.00,\n  \"payment_method\": \"GPay\",\n  \"category\": \"Food\",\n  \"merchant\": \"Dominos Pizza\",\n  \"notes\": \"Paid via UPI - GPay screenshot text: 'Rs 250 debited to Dominos'\",\n  \"source\": \"image_ocr\",\n  \"created_at\": \"2025-09-30T11:00:00\"\n}\n\nOR\n{\n  \"is_valid_attchment\":false,\n  \"transaction_date\": null,\n  \"amount\": 0.00,\n  \"payment_method\": null,\n  \"category\": null,\n  \"merchant\": null,\n  \"notes\": null,\n  \"source\": null,\n  \"created_at\": null\n}\n","inputType":"binary","binaryPropertyName":"data0","options":{}},"type":"@n8n/n8n-nodes-langchain.googleGemini","typeVersion":1,"position":[32,-96],"id":"2c45418a-41ca-4f94-9b25-27dbfa8c50f4","name":"Analyze document","credentials":{"googlePalmApi":{"id":"ZKmR3WzEybcGTCae","name":"Tensora"}}},{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[656,256],"id":"ae930a85-28be-457d-9965-5e180a4b19a4","name":"When clicking ‘Execute workflow’"},{"parameters":{"operation":"executeQuery","query":"CREATE TABLE personal_expenses (\n    id SERIAL PRIMARY KEY,                          -- Unique identifier\n    transaction_date TIMESTAMP NOT NULL,            -- When the transaction happened\n    amount NUMERIC(12, 2) NOT NULL,                 -- Amount spent\n    payment_method VARCHAR(50) NOT NULL,            -- e.g. GPay, PhonePe, Cash, Card, UPI\n    category VARCHAR(100),                          -- e.g. Food, Travel, Shopping\n    merchant VARCHAR(150),                          -- Store/vendor name\n    notes TEXT,                                     -- Any extra details\n    source VARCHAR(50) DEFAULT 'manual',            -- 'image_ocr' or 'manual'\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP  -- When the record was inserted\n);","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[864,256],"id":"4b3dca8a-e042-42b0-b948-0dd7ae8e366c","name":"Execute a SQL query","credentials":{"postgres":{"id":"P8ta1vGMGbrIOFm2","name":"Postgres:N8NDataExtractionDB"}}},{"parameters":{"promptType":"define","text":"=User has uploaded an attachment which contains below expense information:\n{{ $json.content.parts[0].text }}\n\nAnd User request is:\n\"{{ $('When chat message received').item.json.chatInput }}\"\n\nprocess the information and request accordingly. ","options":{"systemMessage":"You are a helpful expense management assistant. who process the information and store into database using \"Insert New Expense\" tool to maintain the information provided."}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[240,-96],"id":"de6151c1-e955-4b0a-a84c-1e4461d2b6c1","name":"AI Agent1"}],"connections":{"When chat message received":{"main":[[{"node":"If has Attachment","type":"main","index":0}]]},"If has Attachment":{"main":[[{"node":"Analyze document","type":"main","index":0}],[{"node":"AI Agent","type":"main","index":0}]]},"Google Gemini Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0},{"node":"AI Agent1","type":"ai_languageModel","index":0}]]},"Postgres Chat Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0},{"node":"AI Agent1","type":"ai_memory","index":0}]]},"When clicking ‘Execute workflow’":{"main":[[{"node":"Execute a SQL query","type":"main","index":0}]]},"Analyze document":{"main":[[{"node":"AI Agent1","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"c4ee4306-bab1-468c-9508-11eb27281ba9","triggerCount":0,"shared":[{"createdAt":"2025-09-26T06:43:30.720Z","updatedAt":"2025-09-26T06:43:30.720Z","role":"workflow:owner","workflowId":"GSrNDYr79P5WKTX1","projectId":"jYp8xiWttkK2cWvC"}],"tags":[]}