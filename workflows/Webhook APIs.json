{"createdAt":"2025-10-23T11:04:00.459Z","updatedAt":"2025-10-23T14:13:20.000Z","id":"hFe7Pjqg4ho1cUEt","name":"Webhook APIs","active":true,"isArchived":false,"nodes":[{"parameters":{"language":"python","pythonCode":"from datetime import datetime\nimport uuid\n\n# SQL injection safe sanitization\ndef sanitize_sql(value):\n    if not isinstance(value, str):\n        return value\n    return value.replace(\"'\", \"''\").strip()\n\n# Validate UUID\ndef is_valid_uuid(value):\n    try:\n        uuid.UUID(str(value))\n        return True\n    except ValueError:\n        return False\n\n# Parse ISO 8601 datetime and convert to SQL format\ndef parse_iso_datetime(value):\n    if not value:  # check for None / null / empty\n        return None\n    try:\n        dt = datetime.fromisoformat(str(value).replace(\"Z\", \"+00:00\"))\n        return dt.strftime(\"%Y-%m-%d %H:%M:%S\")\n    except (ValueError, TypeError):\n        return None\n\ndata = _input.first().json.body\n\n# Optional filters\nid_value = data.get('id')\nid = sanitize_sql(id_value) if id_value and is_valid_uuid(id_value) else None\n\nlong_name = sanitize_sql(data.get('long_name'))\nshort_name = sanitize_sql(data.get('short_name'))\ncurrency = sanitize_sql(data.get('currency'))\nsymbol = sanitize_sql(data.get('symbol'))\nexchange_name = sanitize_sql(data.get('exchange_name'))\nfull_exchange_name = sanitize_sql(data.get('full_exchange_name'))\ninstrument_type = sanitize_sql(data.get('instrument_type'))\n\n# Parse dates safely\nfrom_date = parse_iso_datetime(data.get('from_date'))\nto_date = parse_iso_datetime(data.get('to_date'))\n\n# Limit & offset\nlimit = int(data.get('limit', 100))\noffset = int(data.get('offset', 0))\n\n# Build WHERE clause\nclause = []\n\nif id:\n    clause.append(f\"(id = '{id}')\")\nif long_name:\n    clause.append(f\"(long_name = '{long_name}')\")\nif short_name:\n    clause.append(f\"(short_name = '{short_name}')\")\nif currency:\n    clause.append(f\"(currency = '{currency}')\")\nif symbol:\n    clause.append(f\"(symbol = '{symbol}')\")\nif exchange_name:\n    clause.append(f\"(exchange_name = '{exchange_name}')\")\nif full_exchange_name:\n    clause.append(f\"(full_exchange_name = '{full_exchange_name}')\")\nif instrument_type:\n    clause.append(f\"(instrument_type = '{instrument_type}')\")\n\n# Date range filter\nif from_date and to_date:\n    clause.append(f\"(date BETWEEN '{from_date}' AND '{to_date}')\")\nelif from_date:\n    clause.append(f\"(date >= '{from_date}')\")\nelif to_date:\n    clause.append(f\"(date <= '{to_date}')\")\n\nwhere_clause = \" AND \".join(clause) if clause else \"1=1\"\n\nreturn {\n    \"clause\": where_clause,\n    \"limit\": limit,\n    \"offset\": offset\n}\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-384,-64],"id":"a1e3b575-6b9f-4ceb-8964-6720a6a3e93e","name":"where clause"},{"parameters":{"operation":"executeQuery","query":"SELECT *\nFROM (\n    SELECT \n      id, \n      long_name, \n      short_name, \n      currency, \n      symbol, \n      exchange_name, \n      full_exchange_name, \n      instrument_type, \n      exchange_timezone_name, \n      date, \n      close, \n      open, \n      low, \n      high, \n      CAST(volume AS INTEGER) AS volume,\n      created_at\n    FROM public.stock_data\n    WHERE {{ $json.clause }}\n    ORDER BY date DESC\n    LIMIT {{ $json.limit }}\n    OFFSET {{ $json.offset }}\n) AS sub\nORDER BY date ASC;\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-176,-64],"id":"68b9a104-060a-49d3-a356-588b2ad7ac0a","name":"Execute a SQL query","alwaysOutputData":true,"credentials":{"postgres":{"id":"2ns6vVT4VPQPegP1","name":"Prajakta Postgresql DB"}}},{"parameters":{"httpMethod":"POST","path":"/stock-market-project/table/get-stock-data","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2.1,"position":[-592,-64],"id":"cf5f8a15-ca78-4897-8caa-74fedb84aa11","name":"Get Stock Data By Queried","webhookId":"b81c84ef-423a-44b9-bf99-21b08b7bb5e8"},{"parameters":{"respondWith":"allIncomingItems","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.4,"position":[32,-64],"id":"932cab03-59eb-4e3a-80b8-74d79f1aab45","name":"return Filtered data"},{"parameters":{"path":"/stock-market-project/get-stock-list","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2.1,"position":[-592,304],"id":"52009623-5a47-4d2b-b3cc-51cf1479714a","name":"Get Stock Dropdown ata","webhookId":"c9625902-b6e1-441b-bdfd-f4bce849c49c"},{"parameters":{"operation":"executeQuery","query":"select \n\tdistinct symbol symbol, \n\tlong_name long_name, \n\tshort_name short_name \nfrom public.stock_data;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-384,304],"id":"e65aa7c2-fa28-4cc9-aa79-d6377d9ecdbb","name":"Get Distinct Stocks name","alwaysOutputData":true,"credentials":{"postgres":{"id":"2ns6vVT4VPQPegP1","name":"Prajakta Postgresql DB"}}},{"parameters":{"respondWith":"allIncomingItems","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.4,"position":[-160,304],"id":"87486919-bd88-4b6e-b911-fa7db8e0eb8d","name":"return Filtered data of Stocks"},{"parameters":{"content":"body:\n```\n{\n    \"id\":\"string\",\n    \"long_name\":\"HDFC Bank Limited\", \n    \"short_name\":null,\n    \"currency\":null, \n    \"symbol\":null,\n    \"exchange_name\":null,\n    \"full_exchange_name\":null,\n    \"instrument_type\":null,\n    \"from_date\":null,\n    \"to_date\":null,\n    \"limit\":100,\n    \"offset\":0\n}\n```","height":304,"width":656},"type":"n8n-nodes-base.stickyNote","position":[240,-112],"typeVersion":1,"id":"35e0e1e4-c814-45ee-9184-c6bb42b45e23","name":"Sticky Note"}],"connections":{"where clause":{"main":[[{"node":"Execute a SQL query","type":"main","index":0}]]},"Execute a SQL query":{"main":[[{"node":"return Filtered data","type":"main","index":0}]]},"Get Stock Data By Queried":{"main":[[{"node":"where clause","type":"main","index":0}]]},"Get Stock Dropdown ata":{"main":[[{"node":"Get Distinct Stocks name","type":"main","index":0}]]},"Get Distinct Stocks name":{"main":[[{"node":"return Filtered data of Stocks","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Get Stock Data By Queried":[{"json":{"headers":{"connection":"upgrade","host":"n8n.prasadsawant.com","content-length":"136","sec-ch-ua-platform":"\"Windows\"","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36","sec-ch-ua":"\"Google Chrome\";v=\"141\", \"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"141\"","content-type":"application/json","sec-ch-ua-mobile":"?0","accept":"*/*","origin":"https://c101785e-1044-45a6-bb00-2f933e1ea291.lovableproject.com","sec-fetch-site":"cross-site","sec-fetch-mode":"cors","sec-fetch-dest":"empty","referer":"https://c101785e-1044-45a6-bb00-2f933e1ea291.lovableproject.com/","accept-encoding":"gzip, deflate, br, zstd","accept-language":"en-US,en;q=0.9"},"params":{},"query":{},"body":{"long_name":"IndusInd Bank Limited","from_date":"2025-09-30T18:30:00.000Z","to_date":"2025-10-01T18:30:00.000Z","limit":100,"offset":0},"webhookUrl":"https://n8n.prasadsawant.com/webhook/stock-market-project/table/get-stock-data","executionMode":"production"}}]},"versionId":"cd4be482-d643-4a2b-848f-0a6099883850","triggerCount":2,"shared":[{"createdAt":"2025-10-23T11:04:00.485Z","updatedAt":"2025-10-23T11:04:00.485Z","role":"workflow:owner","workflowId":"hFe7Pjqg4ho1cUEt","projectId":"Y8wSBEGBIlIwgMOi"}],"tags":[]}