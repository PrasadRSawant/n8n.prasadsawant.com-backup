{"createdAt":"2025-07-29T14:09:07.085Z","updatedAt":"2025-08-01T06:12:01.000Z","id":"cx1CiJfd2nXIywOY","name":"LinkedIn: Post Title Generator","active":false,"isArchived":false,"nodes":[{"parameters":{"workflowInputs":{"values":[{"name":"TaskId"},{"name":"TaskMonth"},{"name":"TaskYear"},{"name":"LinkedInHolderName"},{"name":"LinkedInHolderEmail"},{"name":"ExcutionTimeStamp"}]}},"id":"295c5503-ed04-4916-9d5b-de92ab9f0870","typeVersion":1.1,"name":"Trigger To generate Posts","type":"n8n-nodes-base.executeWorkflowTrigger","position":[0,304]},{"parameters":{"language":"python","pythonCode":"from datetime import datetime, timedelta, date\nimport random\nimport uuid\n\nMONTH_YEAR = f\"{_input.first().json.TaskMonth}-{_input.first().json.TaskYear}\"\ndef generate_uuid():\n    return str(uuid.uuid4())\n  \ndef get_random_time():\n    # Choose time slot: morning or evening\n    if random.choice([\"morning\", \"evening\"]) == \"morning\":\n        hour = random.randint(9, 10)  # 9 to 10\n    else:\n        hour = random.randint(15, 19)  # 15 to 19 (3PM to 7PM)\n\n    minute = random.randint(0, 59)\n    second = random.randint(0, 59)\n\n    return hour, minute, second\n\ndef get_sundays_wednesdays(year, month):\n    days_list = []\n    current = date(year, month, 1)\n\n    while current.month == month:\n        if current.weekday() == 6:  # Sunday\n            hour, minute, second = get_random_time()\n            dt = datetime(year, month, current.day, hour, minute, second)\n            days_list.append({\n              \"LinkedInPostId\":generate_uuid(),\n              \"scheduled_day\": \"Sunday\", \n              \"scheduled_date\": dt.isoformat(),\n              \"Month_Year\":MONTH_YEAR\n            })\n        elif current.weekday() == 2:  # Wednesday\n            hour, minute, second = get_random_time()\n            dt = datetime(year, month, current.day, hour, minute, second)\n            days_list.append({\n              \"LinkedInPostId\":generate_uuid(),\n              \"scheduled_day\": \"Wednesday\", \n              \"scheduled_date\": dt.isoformat(),\n              \"Month_Year\":MONTH_YEAR\n            })\n        current += timedelta(days=1)\n\n    return days_list\n\n# Get current year and month\ntoday = date.today()+ timedelta(days=1)\nresult = get_sundays_wednesdays(today.year, today.month)\n\n# Final result\nreturn result\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[176,304],"id":"131f9675-4118-4d4a-9bdf-b85a63499ee7","name":"Get Days for Post"},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[368,304],"id":"df4b0ab2-9699-4407-b645-5d274656b1f8","name":"Iterate Over The Days"},{"parameters":{"assignments":{"assignments":[{"id":"3ec38c3e-fc5c-43d0-bccc-d9404823c2ee","name":"ExistingTopicInMonth","value":"={{ $json.sequential_topic_prompt }}","type":"string"},{"id":"80e497e7-709f-4159-8c56-684f32773f0c","name":"Id","value":"={{ $('Loop Data').first().json.postId }}","type":"string"},{"id":"7a5625c5-b1d9-4a7d-99b6-a872734215b3","name":"ScheduledDate","value":"={{ $('Loop Data').first().json.scheduled_date }}","type":"string"},{"id":"538ea72c-1a01-410c-8255-10622c925630","name":"isPostTopicAlreadyExist","value":"={{ $json.is_post_there }}","type":"boolean"},{"id":"84b3a812-2ef7-4bb8-908c-2607325b22f6","name":"id_of_existing_record","value":"={{ $json.id_of_existing_record }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1168,416],"id":"367804c6-fdf6-4ea2-8489-3320671cdbbc","name":"Design Variables for the Day"},{"parameters":{"documentId":{"__rl":true,"value":"1EE-geUy2_qjxDosy-yIRHgkdkRwsOUqzDVc_9Nb2jZM","mode":"list","cachedResultName":"Linked Post Data","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1EE-geUy2_qjxDosy-yIRHgkdkRwsOUqzDVc_9Nb2jZM/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":1264720381,"mode":"list","cachedResultName":"LinkedIn Posts","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1EE-geUy2_qjxDosy-yIRHgkdkRwsOUqzDVc_9Nb2jZM/edit#gid=1264720381"},"filtersUI":{"values":[{"lookupColumn":"MonthYear","lookupValue":"={{ $json.Month_Year }}"}]},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.6,"position":[768,416],"id":"5f5bccba-b384-4928-9c45-504b6e5081cf","name":"Get Generated Post Titles For this Month","alwaysOutputData":true,"credentials":{"googleSheetsOAuth2Api":{"id":"1jKCIuTI1kwmBNPJ","name":"Google Sheets: prasadsawant1618@gmail.com"}}},{"parameters":{"language":"python","pythonCode":"from datetime import datetime\n\nexisting_posts = _input.all()\n\n# Helper: safely parse a datetime string to 'YYYY-MM-DD'\ndef safe_format_date(date_str, fmt_in):\n    try:\n        return datetime.strptime(date_str, fmt_in).strftime(\"%Y-%m-%d\")\n    except (TypeError, ValueError):\n        return None\n\n# Build list of formatted existing post dates\ndate_for_post_already_designed = []\nfor x in existing_posts:\n    raw_date = x['json'].get(\"ScheduledDateTime\")\n    formatted = safe_format_date(raw_date, \"%Y-%m-%d %H:%M:%S\")\n    if formatted:\n        date_for_post_already_designed.append(formatted)\n\n# Format the loop input date\nloop_scheduled_raw = _('Loop Data').first().json.get('scheduled_date')\nloop_scheduled_formatted = safe_format_date(loop_scheduled_raw, \"%Y-%m-%dT%H:%M:%S\")\n\n# Check if the scheduled date already exists\nis_post_there = loop_scheduled_formatted in date_for_post_already_designed if loop_scheduled_formatted else False\n\n# Get the matching record ID\nid_of_existing_record = \"\"\nif is_post_there:\n    for item in existing_posts:\n        scheduled_raw = item['json'].get(\"ScheduledDateTime\")\n        existing_date = safe_format_date(scheduled_raw, \"%Y-%m-%d %H:%M:%S\")\n        if existing_date == loop_scheduled_formatted:\n            id_of_existing_record = item['json'].get(\"Id\", \"\")\n            break\n\n# Build topic prompt\nsequential_topic_prompt = \"\"\nif existing_posts:\n    lines = []\n    for item in existing_posts:\n        data = item.get('json', {})\n        title = data.get(\"Title\", \"\")\n        date = data.get(\"ScheduledDateTime\", \"\")\n        if title and date:\n            lines.append(f\"Date: {date}, Topic: {title}\")\n    sequential_topic_prompt = '\\n'.join(lines)\n\n# Final return\nreturn {\n    \"sequential_topic_prompt\": sequential_topic_prompt,\n    \"is_post_there\": is_post_there,\n    \"id_of_existing_record\": id_of_existing_record\n}\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[960,416],"id":"02f1aebf-19a9-4839-a67c-7fc2087e6063","name":"Design Array Of the Designed Topics For Month"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[2384,704],"id":"1d3f0538-8148-4551-8a4f-eae3b6c56cd0","name":"No Operation, do nothing"},{"parameters":{"model":"llama3-70b-8192","options":{"maxTokensToSample":1000,"temperature":0.7}},"type":"@n8n/n8n-nodes-langchain.lmChatGroq","typeVersion":1,"position":[1520,704],"id":"b5e0e690-62ea-4eaa-b7f8-b4d3e8055992","name":"LLM To Generate the Topics","credentials":{"groqApi":{"id":"j5UsUm4yE3hxfjmL","name":"Divya's Account"}}},{"parameters":{"promptType":"define","text":"=Here is the Existing List Of Topics for this month:\n\"{{ $json.ExistingTopicInMonth }}\"\n\ngenerate give me topic for next day \"{{ $json.ScheduledDate }}\"\n\nReturn Only Topic Name. Not Other text","messages":{"messageValues":[{"message":"You Are a helpful assistant to choose Topic for my linkedin post related to \"AI ML Domain with Maths"}]},"batching":{}},"type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.7,"position":[1584,512],"id":"37d62b7f-844a-4532-8190-5ad198828fa0","name":"Topic Designer"},{"parameters":{"operation":"append","documentId":{"__rl":true,"value":"1EE-geUy2_qjxDosy-yIRHgkdkRwsOUqzDVc_9Nb2jZM","mode":"list","cachedResultName":"Linked Post Data","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1EE-geUy2_qjxDosy-yIRHgkdkRwsOUqzDVc_9Nb2jZM/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":1264720381,"mode":"list","cachedResultName":"LinkedIn Posts","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1EE-geUy2_qjxDosy-yIRHgkdkRwsOUqzDVc_9Nb2jZM/edit#gid=1264720381"},"columns":{"mappingMode":"defineBelow","value":{"Id":"={{ $('Design Variables for the Day').item.json.Id }}","Title":"={{ $json.text }}","MonthYear":"={{ $('Loop Data').first().json.Month_Year }}","ScheduledDateTime":"={{ $('Loop Data').first().json.scheduled_date }}","CreateDateTime":"={{ $now }}","IsScheduled":"true","IsApproved":"false","IsPublished":"false","IsApprovedByAccountHolder":"false"},"matchingColumns":[],"schema":[{"id":"Id","displayName":"Id","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Title","displayName":"Title","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Post","displayName":"Post","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"HasTags","displayName":"HasTags","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"MonthYear","displayName":"MonthYear","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"ScheduledDateTime","displayName":"ScheduledDateTime","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"PublishedDateTime","displayName":"PublishedDateTime","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"IsApprovedByAccountHolder","displayName":"IsApprovedByAccountHolder","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"CreateDateTime","displayName":"CreateDateTime","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"IsScheduled","displayName":"IsScheduled","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"IsApproved","displayName":"IsApproved","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"IsPublished","displayName":"IsPublished","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.6,"position":[1920,512],"id":"168c601d-8917-4179-bdc9-426732190e59","name":"Add LinkedIn Post Record In Sheet","credentials":{"googleSheetsOAuth2Api":{"id":"1jKCIuTI1kwmBNPJ","name":"Google Sheets: prasadsawant1618@gmail.com"}}},{"parameters":{"assignments":{"assignments":[{"id":"02a59334-9bfb-4f00-baaf-8ff17e149299","name":"postId","value":"={{ $json.LinkedInPostId }}","type":"string"},{"id":"b707c862-c3b2-4b6b-aac2-b4d90d905e7d","name":"scheduled_day","value":"={{ $json.scheduled_day }}","type":"string"},{"id":"0988a0d5-11fa-4a65-a04a-a8191aaad578","name":"scheduled_date","value":"={{ $json.scheduled_date }}","type":"string"},{"id":"9a69efc3-bd3a-4fb5-a34f-72429c059597","name":"Month_Year","value":"={{ $json.Month_Year }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[592,416],"id":"5146d268-859f-4dce-b84c-9ba4e19938cc","name":"Loop Data"},{"parameters":{},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[2128,416],"id":"30e331f0-6d98-4c5d-8908-9d3cb6fccb37","name":"Merge"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"08bd0b38-2f49-46e3-a389-ac16e4dccb17","leftValue":"={{ $json.isPostTopicAlreadyExist }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[1360,416],"id":"df4bba19-620b-422b-9dc7-374a982ffec0","name":"Topic For Day Already There?"},{"parameters":{"documentId":{"__rl":true,"value":"1EE-geUy2_qjxDosy-yIRHgkdkRwsOUqzDVc_9Nb2jZM","mode":"list","cachedResultName":"Linked Post Data","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1EE-geUy2_qjxDosy-yIRHgkdkRwsOUqzDVc_9Nb2jZM/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":1264720381,"mode":"list","cachedResultName":"LinkedIn Posts","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1EE-geUy2_qjxDosy-yIRHgkdkRwsOUqzDVc_9Nb2jZM/edit#gid=1264720381"},"filtersUI":{"values":[{"lookupColumn":"Id","lookupValue":"={{ $json.id_of_existing_record }}"}]},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.6,"position":[1920,320],"id":"e12eeb7b-9eef-4fdd-8002-e4146fc9f83d","name":"Get Existing Record","alwaysOutputData":true,"credentials":{"googleSheetsOAuth2Api":{"id":"1jKCIuTI1kwmBNPJ","name":"Google Sheets: prasadsawant1618@gmail.com"}}},{"parameters":{"language":"python","pythonCode":"loop_response =_input.all()\n\nreturn {\n  \"loop_response\":loop_response\n}"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[608,208],"id":"50e3e3bd-befd-4790-b102-ade1a16cf4ab","name":"return"},{"parameters":{"content":"### Generate Topics for Days ","height":976,"width":3088},"type":"n8n-nodes-base.stickyNote","position":[-224,16],"typeVersion":1,"id":"62118e8c-c889-464c-9dfb-0abcfbe32038","name":"Sticky Note7"}],"connections":{"Trigger To generate Posts":{"main":[[{"node":"Get Days for Post","type":"main","index":0}]]},"Get Days for Post":{"main":[[{"node":"Iterate Over The Days","type":"main","index":0}]]},"Iterate Over The Days":{"main":[[{"node":"return","type":"main","index":0}],[{"node":"Loop Data","type":"main","index":0}]]},"Design Variables for the Day":{"main":[[{"node":"Topic For Day Already There?","type":"main","index":0}]]},"Get Generated Post Titles For this Month":{"main":[[{"node":"Design Array Of the Designed Topics For Month","type":"main","index":0}]]},"Design Array Of the Designed Topics For Month":{"main":[[{"node":"Design Variables for the Day","type":"main","index":0}]]},"No Operation, do nothing":{"main":[[{"node":"Iterate Over The Days","type":"main","index":0}]]},"LLM To Generate the Topics":{"ai_languageModel":[[{"node":"Topic Designer","type":"ai_languageModel","index":0}]]},"Topic Designer":{"main":[[{"node":"Add LinkedIn Post Record In Sheet","type":"main","index":0}]]},"Add LinkedIn Post Record In Sheet":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Loop Data":{"main":[[{"node":"Get Generated Post Titles For this Month","type":"main","index":0}]]},"Merge":{"main":[[{"node":"No Operation, do nothing","type":"main","index":0}]]},"Topic For Day Already There?":{"main":[[{"node":"Get Existing Record","type":"main","index":0}],[{"node":"Topic Designer","type":"main","index":0}]]},"Get Existing Record":{"main":[[{"node":"Merge","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{"Trigger To generate Posts":[{"json":{"TaskId":"e2519d6f-855a-4b2e-ad99-12f816dd8d7b","TaskMonth":"July","TaskYear":"2025","LinkedInHolderName":"prasadsawant1618@gmail.com","LinkedInHolderEmail":"prasadsawant1618@gmail.com","ExcutionTimeStamp":"2025-07-29T19:40:26.011+05:30"}}]},"versionId":"49ac88f0-3cb0-46fc-98e2-c38d0ce1c9c6","triggerCount":0,"shared":[{"createdAt":"2025-07-29T14:09:07.089Z","updatedAt":"2025-07-29T14:09:07.089Z","role":"workflow:owner","workflowId":"cx1CiJfd2nXIywOY","projectId":"jYp8xiWttkK2cWvC"}],"tags":[]}