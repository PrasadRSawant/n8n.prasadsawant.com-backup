{"createdAt":"2025-08-05T17:06:47.873Z","updatedAt":"2025-08-05T18:28:55.000Z","id":"CtTFjfNrR7bFqfjc","name":"Kangaroo","active":false,"isArchived":false,"nodes":[{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[-608,-160],"id":"fac56b1b-74df-45fb-bf72-b0c6cfb7ecd8","name":"Kangaroo Interface","webhookId":"da813232-a3a8-4ccb-96c8-783b4c457b2e"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.1,"position":[-400,-160],"id":"c1591086-7821-4cca-b7c8-0b1af107de3d","name":"Kangaroo AI"},{"parameters":{"options":{"maxOutputTokens":1000,"temperature":0.7}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[-544,48],"id":"77091762-a38f-43f0-aa85-31be4dc09376","name":"Kangaroo Brain","credentials":{"googlePalmApi":{"id":"o40oJ0ZLn1vdpVvD","name":"Tensora 2"}}},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[-400,48],"id":"15cb559c-7873-42af-9405-7c84bdb5f20d","name":"Kangaroo Memory"},{"parameters":{"toolDescription":" Call this Data Analyst when user ask any Analytical question","text":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', `Task for Data Analyst to analyze the database and get answer`, 'string') }}","options":{"systemMessage":"=You are DataAnalyse, an intelligent AI agent that assists users in querying and analyzing business data from a SQL Server database.\n\n### IMPORTANT: ALWAYS ADD CLAUSE AS \"WHERE AGENCY_ID='63as5d3adfa5f4-asd5a4s565-4f656'\"\n\nYour primary job is to:\n1. Understand user questions related to data analysis (e.g., \"Which clients have the highest income?\", \"Show me active commercial clients\").\n2. Use internal tools to:\n   - `get_vw_list`: Retrieve all available database views.\n   - `get_columns(view_name)`: Get all columns in a specific view.\n   - `get_view_definition(view_name)`: Retrieve SQL definition of a view to understand table relationships, including primary keys (PK), foreign keys (FK), and join logic.\n3. Use your understanding of relationships between views and their underlying tables to determine the appropriate data path.\n4. Design an optimized SQL query using T-SQL syntax, tailored to the user's natural language question.\n5. Use `execute_query(sql)` tool to run the SQL query and retrieve results from the database.\n6. Translate and summarize the raw results into meaningful insights in clear, human-readable language.\n\nRules:\n- Never assume table relationships unless explicitly defined via PK/FK or in view logic.\n- Always validate column names and join keys by referencing the `get_columns` and `get_view_definition`.\n- Avoid leaking raw SQL definitions to the user unless they ask.\n- Use aliases and readable column naming in output if possible.\n- Be concise, accurate, and helpful in your analysis.\n\nExample capabilities:\n- \"List all clients who have life insurance and income above 100000.\"\n- \"Find total income grouped by client type for the past 3 years.\"\n- \"Whatâ€™s the average age of clients who are homeowners?\"\n\nYou are not just a query engine, but a data assistant that reasons about the schema, relationships, and business meaning behind the data.\n\nAlways verify before answering.\n","maxIterations":5}},"type":"@n8n/n8n-nodes-langchain.agentTool","typeVersion":2.2,"position":[-800,320],"id":"c66abc26-83b3-45f1-98b1-e2c9369916c4","name":"Data Analyst"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[-1088,592],"id":"0d7f0349-e4b0-4eec-a2f8-7bbfb4653242","name":"Data Analyst Brain","credentials":{"googlePalmApi":{"id":"o40oJ0ZLn1vdpVvD","name":"Tensora 2"}}},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[-896,576],"id":"bf775cc4-a4d4-4aa1-a418-d5a3e5bdb3a0","name":"Simple Memory"},{"parameters":{"description":"call to get all views and its description available in database","jsCode":"// Access the input query object\nconst input = query;  // input.query was passed, now assigned to `input`\n\n// Predefined views and their descriptions\nconst views = [\n  {\n    view: \"vw_ClientPrimaryPersonDetails\",\n    description: \"Provides combined client and primary contact details including personal info, demographics, financials, and relationship data for analysis and reporting across business segments.\"\n  },\n  {\n    view: \"ClientSummaryView\",\n    description: \"Provides a summarized view of client details including business type, source, account type, agency, office, and activation status.\"\n  }\n];\n\n// Check if the query requests the view list\nif (input.want_list === true) {\n  return JSON.stringify({ views });\n} else {\n  return JSON.stringify({\n    message: \"Set 'want_list' to true to retrieve the view descriptions.\"\n  });\n}\n","specifyInputSchema":true,"jsonSchemaExample":"{\n\t\"want_list\": true\n}"},"type":"@n8n/n8n-nodes-langchain.toolCode","typeVersion":1.3,"position":[-720,576],"id":"cba9dec6-1340-44a7-ab53-228d050a2cbe","name":"get_vw_list"},{"parameters":{"description":"call to get all views columns by view name","jsCode":"// Input received from tool\nconst input = query; // e.g., { vw_name: \"vw_ClientPrimaryPersonDetails\" }\n\n// Define metadata for each view\nconst viewDefinitions = {\n  \"vw_ClientPrimaryPersonDetails\": [\n    { column_name: \"ClientId\", datatype: \"INT\" },\n    { column_name: \"ClientNumber\", datatype: \"INT\" },\n    { column_name: \"CompanyName\", datatype: \"NVARCHAR\" },\n    { column_name: \"DBAName\", datatype: \"NVARCHAR\" },\n    { column_name: \"ClientType\", datatype: \"NVARCHAR\" },\n    { column_name: \"IsCommercial\", datatype: \"BIT\" },\n    { column_name: \"IsPersonal\", datatype: \"BIT\" },\n    { column_name: \"IsLifeHealth\", datatype: \"BIT\" },\n    { column_name: \"BusinessType\", datatype: \"NVARCHAR\" },\n    { column_name: \"Source\", datatype: \"NVARCHAR\" },\n    { column_name: \"AccountSource\", datatype: \"NVARCHAR\" },\n    { column_name: \"Status\", datatype: \"NVARCHAR\" },\n    { column_name: \"Producer\", datatype: \"NVARCHAR\" },\n    { column_name: \"CSR\", datatype: \"NVARCHAR\" },\n    { column_name: \"ClientSince\", datatype: \"DATETIME\" },\n    { column_name: \"ClientModifiedDate\", datatype: \"DATETIME\" },\n    { column_name: \"PersonId\", datatype: \"INT\" },\n    { column_name: \"FirstName\", datatype: \"NVARCHAR\" },\n    { column_name: \"MiddleName\", datatype: \"NVARCHAR\" },\n    { column_name: \"LastName\", datatype: \"NVARCHAR\" },\n    { column_name: \"PreferredName\", datatype: \"NVARCHAR\" },\n    { column_name: \"Gender\", datatype: \"NVARCHAR\" },\n    { column_name: \"DateOfBirth\", datatype: \"DATE\" },\n    { column_name: \"Email\", datatype: \"NVARCHAR\" },\n    { column_name: \"DriverLicenseNumber\", datatype: \"NVARCHAR\" },\n    { column_name: \"DriverLicenseState\", datatype: \"NVARCHAR\" },\n    { column_name: \"MaritalStatus\", datatype: \"NVARCHAR\" },\n    { column_name: \"Homeowner\", datatype: \"BIT\" },\n    { column_name: \"Income\", datatype: \"DECIMAL\" },\n    { column_name: \"Employer\", datatype: \"NVARCHAR\" },\n    { column_name: \"Education\", datatype: \"NVARCHAR\" },\n    { column_name: \"IsDeceased\", datatype: \"BIT\" },\n    { column_name: \"Comments\", datatype: \"NVARCHAR\" },\n    { column_name: \"Occupation\", datatype: \"NVARCHAR\" },\n    { column_name: \"PersonWebsite\", datatype: \"NVARCHAR\" },\n    { column_name: \"PersonModifiedDate\", datatype: \"DATETIME\" }\n  ],\n  \"ClientSummaryView\": [\n    { column_name: \"ClientId\", datatype: \"INT\" },\n    { column_name: \"ClientNumber\", datatype: \"INT\" },\n    { column_name: \"CompanyName\", datatype: \"NVARCHAR\" },\n    { column_name: \"DBAName\", datatype: \"NVARCHAR\" },\n    { column_name: \"ClientType\", datatype: \"NVARCHAR\" },\n    { column_name: \"BusinessType\", datatype: \"NVARCHAR\" },\n    { column_name: \"Source\", datatype: \"NVARCHAR\" },\n    { column_name: \"AccountSource\", datatype: \"NVARCHAR\" },\n    { column_name: \"IsCommercial\", datatype: \"BIT\" },\n    { column_name: \"IsPersonal\", datatype: \"BIT\" },\n    { column_name: \"IsLifeHealth\", datatype: \"BIT\" },\n    { column_name: \"ClientSince\", datatype: \"DATETIME\" },\n    { column_name: \"Active\", datatype: \"BIT\" },\n    { column_name: \"AgencyName\", datatype: \"NVARCHAR\" },\n    { column_name: \"OfficeDescription\", datatype: \"NVARCHAR\" }\n  ]\n};\n\n// Validate and return columns for the requested view\nconst viewName = input.vw_name;\n\nif (viewDefinitions[viewName]) {\n  return JSON.stringify({\n    view: viewName,\n    columns: viewDefinitions[viewName]\n  });\n} else {\n  return JSON.stringify({\n    error: `View \"${viewName}\" not found.`\n  });\n}\n","specifyInputSchema":true,"jsonSchemaExample":"{\n\t\"vw_name\": \"name of view\"\n}"},"type":"@n8n/n8n-nodes-langchain.toolCode","typeVersion":1.3,"position":[-576,576],"id":"c714cd81-c5ea-4214-b251-d4da4953d88e","name":"get_columns(view_name)"}],"connections":{"Kangaroo Interface":{"main":[[{"node":"Kangaroo AI","type":"main","index":0}]]},"Kangaroo Brain":{"ai_languageModel":[[{"node":"Kangaroo AI","type":"ai_languageModel","index":0}]]},"Kangaroo Memory":{"ai_memory":[[{"node":"Kangaroo AI","type":"ai_memory","index":0}]]},"Data Analyst":{"ai_tool":[[{"node":"Kangaroo AI","type":"ai_tool","index":0}]]},"Data Analyst Brain":{"ai_languageModel":[[{"node":"Data Analyst","type":"ai_languageModel","index":0}]]},"Simple Memory":{"ai_memory":[[{"node":"Data Analyst","type":"ai_memory","index":0}]]},"get_vw_list":{"ai_tool":[[{"node":"Data Analyst","type":"ai_tool","index":0}]]},"get_columns(view_name)":{"ai_tool":[[{"node":"Data Analyst","type":"ai_tool","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"265c9d44-cd80-4ca6-9358-dcd9f4895955","triggerCount":0,"tags":[]}